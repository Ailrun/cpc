searchState.loadedDescShard("cpc", 0, "Core Proof Checker\nFrontend of CPC\nKernel of CPC\nParsers of CPC\nAbstract Syntax Tree (AST) of CPC\nMore (Language-level) Parser Combinators\nExpression Parsers of CPC\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLexer-like Parsers\nParser for Proper Expression Syntax\nParser for Repl Instructions\nGeneral Helper Parser for Single-variable Binder …\nParameter Parser\nList of Keywords in CPC\nAbsurd case\nApp case\nContext\nAST for An Expression/Type\nFun case\nUniverse Level Starting from 0.\nAST for Neutral Expression\nAST for Normal Expression\nPi case\nType as an Expression\nName (Ident) with a Type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNormalization Module Based on Normalization-by-Evaluation …\nType Checking/Inference Implementation\nSemantic Domain For Evaluation\nEvaluation into Domain\nReadback from Domain\nEager Substitution-Normalization for Types\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper Readback for a Domain Value as a Neutral Domain …\nSpecial Readback from a domain type into a normalized …\nMain Trait for Evaluation\nReduce Domain-value Application\nHelper for Inconsistency Case\nHelper for Non-neutral Expression Case when Expecting …\nHelper for Non-type Expression Case when Expecting Type\nList of Seen Identifiers\nMain Trait for Readback\nThis method takes the ownership of <code>self</code> as we also want to …\nα-Equivalence Checker\nContains the error value\nContains the success value\nRenaming for α-Equivalence and Subtyping\nType-checking Monad\nPossible Errors from Type Checking/Inference\nType Checking for General (Possibly Open) Expressions\nSubtyping Check for Normalized Types\nType Checking for Closed Expression\nType Inference for Closed Expression\nUniverse-level Inference for Closed Types\nReturns the argument unchanged.\nType Inference for General (Possibly Open) Expression\nUniverse-level Inference for General (Possibly Open) Types\nCalls <code>U::from(self)</code>.")