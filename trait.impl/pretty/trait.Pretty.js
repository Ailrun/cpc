(function() {
    var implementors = Object.fromEntries([["cpc",[["impl&lt;'a, D, A&gt; <a class=\"trait\" href=\"pretty/trait.Pretty.html\" title=\"trait pretty::Pretty\">Pretty</a>&lt;'a, D, A&gt; for &amp;'a <a class=\"enum\" href=\"cpc/front/syntax/enum.Exp.html\" title=\"enum cpc::front::syntax::Exp\">Exp</a><div class=\"where\">where\n    A: 'a,\n    D: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"pretty/trait.DocAllocator.html\" title=\"trait pretty::DocAllocator\">DocAllocator</a>&lt;'a, A&gt;,\n    <a class=\"struct\" href=\"pretty/struct.DocBuilder.html\" title=\"struct pretty::DocBuilder\">DocBuilder</a>&lt;'a, D, A&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div>"],["impl&lt;'a, D, A, T&gt; <a class=\"trait\" href=\"pretty/trait.Pretty.html\" title=\"trait pretty::Pretty\">Pretty</a>&lt;'a, D, A&gt; for &amp;'a <a class=\"struct\" href=\"cpc/front/syntax/struct.TypedName.html\" title=\"struct cpc::front::syntax::TypedName\">TypedName</a>&lt;T&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.reference.html\">&amp;'a T</a>: <a class=\"trait\" href=\"pretty/trait.Pretty.html\" title=\"trait pretty::Pretty\">Pretty</a>&lt;'a, D, A&gt;,\n    A: 'a,\n    D: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"pretty/trait.DocAllocator.html\" title=\"trait pretty::DocAllocator\">DocAllocator</a>&lt;'a, A&gt;,\n    <a class=\"struct\" href=\"pretty/struct.DocBuilder.html\" title=\"struct pretty::DocBuilder\">DocBuilder</a>&lt;'a, D, A&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div>"]]],["pretty",[]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1957,14]}