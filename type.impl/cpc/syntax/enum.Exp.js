(function() {
    var type_impls = Object.fromEntries([["cpc",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Clone-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Debug-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#21-44\">source</a><a href=\"#impl-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"docblock\"><h5 id=\"main-functions-for-normalization-by-evaluation\"><a class=\"doc-anchor\" href=\"#main-functions-for-normalization-by-evaluation\">§</a>Main Functions for Normalization-by-Evaluation</h5></div><div class=\"impl-items\"><section id=\"method.nbe\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#22-32\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.nbe\" class=\"fn\">nbe</a>(self, typ: Self, ctx: &amp;<a class=\"type\" href=\"cpc/syntax/type.Ctx.html\" title=\"type cpc::syntax::Ctx\">Ctx</a>) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a></h4></section><section id=\"method.nbe_typ\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#34-43\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.nbe_typ\" class=\"fn\">nbe_typ</a>(self, ctx: &amp;<a class=\"type\" href=\"cpc/syntax/type.Ctx.html\" title=\"type cpc::syntax::Ctx\">Ctx</a>) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a></h4></section></div></details>",0,"cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#47-102\">source</a><a href=\"#impl-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"docblock\"><h5 id=\"evaluation-into-domain\"><a class=\"doc-anchor\" href=\"#evaluation-into-domain\">§</a>Evaluation into Domain</h5></div><div class=\"impl-items\"><section id=\"method.eval\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#48-101\">source</a><h4 class=\"code-header\">fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.eval\" class=\"fn\">eval</a>(self, env: &amp;<a class=\"type\" href=\"cpc/kernel/domain/type.Env.html\" title=\"type cpc::kernel::domain::Env\">Env</a>) -&gt; <a class=\"enum\" href=\"cpc/kernel/domain/enum.Dom.html\" title=\"enum cpc::kernel::domain::Dom\">D</a></h4></section></div></details>",0,"cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#95-111\">source</a><a href=\"#impl-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"docblock\"><h5 id=\"helper-functions-for-easier-exp-construction\"><a class=\"doc-anchor\" href=\"#helper-functions-for-easier-exp-construction\">§</a>Helper functions for easier <a href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a> construction</h5></div><div class=\"impl-items\"><section id=\"method.absurd\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#96-98\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.absurd\" class=\"fn\">absurd</a>(absurd_exp: <a class=\"struct\" href=\"cpc/syntax/struct.Absurd.html\" title=\"struct cpc::syntax::Absurd\">Absurd</a>&lt;Self, Self&gt;) -&gt; Self</h4></section><section id=\"method.pi\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#100-102\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.pi\" class=\"fn\">pi</a>(pi_exp: <a class=\"struct\" href=\"cpc/syntax/struct.Pi.html\" title=\"struct cpc::syntax::Pi\">Pi</a>&lt;Self&gt;) -&gt; Self</h4></section><section id=\"method.fun\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#104-106\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.fun\" class=\"fn\">fun</a>(fun_exp: <a class=\"struct\" href=\"cpc/syntax/struct.Fun.html\" title=\"struct cpc::syntax::Fun\">Fun</a>&lt;Self&gt;) -&gt; Self</h4></section><section id=\"method.app\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#108-110\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.app\" class=\"fn\">app</a>(app_exp: <a class=\"struct\" href=\"cpc/syntax/struct.App.html\" title=\"struct cpc::syntax::App\">App</a>&lt;Self, Self&gt;) -&gt; Self</h4></section></div></details>",0,"cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNeut%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#200-215\">source</a><a href=\"#impl-From%3CNeut%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Neut.html\" title=\"enum cpc::syntax::Neut\">Neut</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#201-214\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"cpc/syntax/enum.Neut.html\" title=\"enum cpc::syntax::Neut\">Neut</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Neut>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNorm%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#182-198\">source</a><a href=\"#impl-From%3CNorm%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#183-197\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Norm>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-PartialEq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cpc::syntax::Typ"],["<section id=\"impl-Eq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Eq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section>","Eq","cpc::syntax::Typ"],["<section id=\"impl-StructuralPartialEq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-StructuralPartialEq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section>","StructuralPartialEq","cpc::syntax::Typ"]]],["cpc",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Clone-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.83.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Debug-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.83.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.83.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#21-46\">source</a><a href=\"#impl-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"docblock\"><h5 id=\"main-functions-for-normalization-by-evaluation\"><a class=\"doc-anchor\" href=\"#main-functions-for-normalization-by-evaluation\">§</a>Main Functions for Normalization-by-Evaluation</h5></div><div class=\"impl-items\"><section id=\"method.nbe\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#22-29\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.nbe\" class=\"fn\">nbe</a>(self, typ: Self, ctx: &amp;<a class=\"type\" href=\"cpc/syntax/type.Ctx.html\" title=\"type cpc::syntax::Ctx\">Ctx</a>) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a></h4></section><section id=\"method.nbe_typ\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#31-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.nbe_typ\" class=\"fn\">nbe_typ</a>(self, ctx: &amp;<a class=\"type\" href=\"cpc/syntax/type.Ctx.html\" title=\"type cpc::syntax::Ctx\">Ctx</a>) -&gt; <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a></h4></section><section id=\"method.build_initial\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#36-45\">source</a><h4 class=\"code-header\">fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.build_initial\" class=\"fn\">build_initial</a>(ctx: &amp;<a class=\"type\" href=\"cpc/syntax/type.Ctx.html\" title=\"type cpc::syntax::Ctx\">Ctx</a>) -&gt; (<a class=\"type\" href=\"cpc/kernel/domain/type.Env.html\" title=\"type cpc::kernel::domain::Env\">Env</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"cpc/syntax/type.Ident.html\" title=\"type cpc::syntax::Ident\">Ident</a>&gt;)</h4></section></div></details>",0,"cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#49-104\">source</a><a href=\"#impl-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"docblock\"><h5 id=\"evaluation-into-domain\"><a class=\"doc-anchor\" href=\"#evaluation-into-domain\">§</a>Evaluation into Domain</h5></div><div class=\"impl-items\"><section id=\"method.eval\" class=\"method\"><a class=\"src rightside\" href=\"src/cpc/kernel/nbe.rs.html#50-103\">source</a><h4 class=\"code-header\">fn <a href=\"cpc/syntax/enum.Exp.html#tymethod.eval\" class=\"fn\">eval</a>(self, env: &amp;<a class=\"type\" href=\"cpc/kernel/domain/type.Env.html\" title=\"type cpc::kernel::domain::Env\">Env</a>) -&gt; <a class=\"enum\" href=\"cpc/kernel/domain/enum.Dom.html\" title=\"enum cpc::kernel::domain::Dom\">D</a></h4></section></div></details>",0,"cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAbsurd%3CExp,+Exp%3E%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#147-151\">source</a><a href=\"#impl-From%3CAbsurd%3CExp,+Exp%3E%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cpc/syntax/struct.Absurd.html\" title=\"struct cpc::syntax::Absurd\">Absurd</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>, <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#148-150\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"cpc/syntax/struct.Absurd.html\" title=\"struct cpc::syntax::Absurd\">Absurd</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>, <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Absurd<Exp, Exp>>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CApp%3CExp,+Exp%3E%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#165-169\">source</a><a href=\"#impl-From%3CApp%3CExp,+Exp%3E%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cpc/syntax/struct.App.html\" title=\"struct cpc::syntax::App\">App</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>, <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#166-168\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"cpc/syntax/struct.App.html\" title=\"struct cpc::syntax::App\">App</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>, <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<App<Exp, Exp>>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFun%3CExp%3E%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#159-163\">source</a><a href=\"#impl-From%3CFun%3CExp%3E%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cpc/syntax/struct.Fun.html\" title=\"struct cpc::syntax::Fun\">Fun</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#160-162\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"cpc/syntax/struct.Fun.html\" title=\"struct cpc::syntax::Fun\">Fun</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Fun<Exp>>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNeut%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#195-210\">source</a><a href=\"#impl-From%3CNeut%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Neut.html\" title=\"enum cpc::syntax::Neut\">Neut</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#196-209\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"cpc/syntax/enum.Neut.html\" title=\"enum cpc::syntax::Neut\">Neut</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Neut>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNorm%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#177-193\">source</a><a href=\"#impl-From%3CNorm%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#178-192\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"cpc/syntax/enum.Norm.html\" title=\"enum cpc::syntax::Norm\">Norm</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Norm>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPi%3CExp%3E%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#153-157\">source</a><a href=\"#impl-From%3CPi%3CExp%3E%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cpc/syntax/struct.Pi.html\" title=\"struct cpc::syntax::Pi\">Pi</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#154-156\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"cpc/syntax/struct.Pi.html\" title=\"struct cpc::syntax::Pi\">Pi</a>&lt;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Pi<Exp>>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#171-175\">source</a><a href=\"#impl-From%3CString%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.83.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#172-174\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"type\" href=\"cpc/syntax/type.Ident.html\" title=\"type cpc::syntax::Ident\">Ident</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu128%3E-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#141-145\">source</a><a href=\"#impl-From%3Cu128%3E-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#142-144\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"type\" href=\"cpc/syntax/type.Level.html\" title=\"type cpc::syntax::Level\">Level</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u128>","cpc::syntax::Typ"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-PartialEq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.83.0/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cpc::syntax::Typ"],["<section id=\"impl-Eq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-Eq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section>","Eq","cpc::syntax::Typ"],["<section id=\"impl-StructuralPartialEq-for-Exp\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpc/syntax.rs.html#30\">source</a><a href=\"#impl-StructuralPartialEq-for-Exp\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.83.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"cpc/syntax/enum.Exp.html\" title=\"enum cpc::syntax::Exp\">Exp</a></h3></section>","StructuralPartialEq","cpc::syntax::Typ"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[14379,22161]}